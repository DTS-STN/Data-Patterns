import fs from "fs";
import path from "path";
import Head from 'next/head';
import marked from "marked";
import matter from "gray-matter";
import {GCFooter, GCHeader} from 'gc-tortilla';

export default function Pattern({ htmlString, data }) {
    return (
        <div>
            <Head>
                <title>{data.name}</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
            <GCHeader/>
            <h1>{data.name}</h1>
            <p>{data["short-description"]}</p>
            <div dangerouslySetInnerHTML={{ __html: htmlString }} />
            <div>Date Modified {data["date-modified"]}</div>
            <GCFooter/>
        </div>
    )
}

export async function getStaticPaths() {
    const files = fs.readdirSync("patterns");
    console.log("files: ", files);
    const paths = files.map(filename => ({
        params: {
            slug: filename.replace(".md", "")
        }
    }));
    console.log("paths: ", paths);

    return {
        paths,
        fallback: false
    };
}

export async function getStaticProps({ params: { slug } }) {
    const markdownWithMetadata = fs.readFileSync(path.join("patterns", slug + ".md")).toString();

    const parsedMarkdown = matter(markdownWithMetadata);

    const htmlString = marked(parsedMarkdown.content);

    return {
        props: {
            htmlString,
            data: parsedMarkdown.data
        }
    };
  }